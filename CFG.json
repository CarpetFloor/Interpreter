{"statements":[{"name":"programlist","rules":["program programlist","program","whilelooplist programlist","whilelooplist","program whilelooplist programlist","program whilelooplist","whilelooplist program programlist","whilelooplist program"]},{"name":"program","rules":[null,"conditionallist statementlist program","statementlist program","conditionallist program","statementlist","conditionallist"]},{"name":"statementlist","rules":[null,"statement"]},{"name":"statement","rules":[null,"PRINT ( ID ) ;","PRINT ( expression ) ;","PRINT ( stringexpression ) ;","LISTTYPE [ NUMTYPE ] ID = [ ] ;","LISTTYPE [ STRINGTYPE ] ID = [ ] ;","NUMTYPE ID = expression ;","STRINGTYPE ID = stringexpression ;","ID = expression ;","ID = stringexpression ;","ID [ NUM ] = expression ;","ID [ NUM ] = stringexpression ;","ID . ADD ( expression ) ;","ID . ADD ( stringexpression ) ;","ID += expression ;","ID += stringexpression ;","ID [ NUM ] += expression ;","ID [ NUM ] += stringexpression ;"]},{"name":"expression","rules":[null,"expression - term","term"]},{"name":"term","rules":[null,"term / factor","factor"]},{"name":"factor","rules":[null,"exponent"]},{"name":"exponent","rules":[null,"ID","ID . GET ( NUM )","( expression )"]},{"name":"stringexpression","rules":[null,"stringterm"]},{"name":"stringterm","rules":[null,"ID","ID . GET ( NUM )"]},{"name":"conditionallist","rules":[null,"conditional"]},{"name":"conditional","rules":["IF ( expression = = expression ) { statementlist }","IF ( expression < expression ) { statementlist }","IF ( expression > expression ) { statementlist }","IF ( expression = = expression ) { statementlist } ELSE { statementlist }","IF ( expression < expression ) { statementlist } ELSE { statementlist }","IF ( expression > expression ) { statementlist } ELSE { statementlist }","IF ( expression == expression ) { statementlist } elseifconditionallist","IF ( expression < expression ) { statementlist } elseifconditionallist","IF (expression > expression ) { statementlist } elseifconditionallist","IF ( expression == expression ) { statementlist } elseifconditionallist ELSE { statementlist }","IF ( expression < expression ) { statementlist } elseifconditionallist ELSE { statementlist }","IF (expression > expression ) { statementlist } elseifconditionallist ELSE { conditionallist }"]},{"name":"elseifconditionallist","rules":["ELSE IF ( expression = = expression ) { statementlist } elseifconditionallist","ELSE IF ( expression < expression ) { statementlist } elseifconditionallist","ELSE IF ( expression > expression ) { statementlist } elseifconditionallist","ELSE IF ( expression = = expression ) { statementlist }","ELSE IF ( expression < expression ) { statementlist }","ELSE IF ( expression > expression ) { statementlist }"]},{"name":"whilelooplist","rules":["whileloop whilelooplist","whileloop"]},{"name":"whileloop","rules":["WHILE ( expression = = expression ) { program }","WHILE ( expression < expression ) { program }","WHILE ( expression > expression ) { program }"]}]}